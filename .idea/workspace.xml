<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="1b7bbc03-8d02-4551-a26d-77a3315d1527" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/CRDT.py" beforeDir="false" afterPath="$PROJECT_DIR$/CRDT.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Msg.py" beforeDir="false" afterPath="$PROJECT_DIR$/Msg.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/NetworkManager.py" beforeDir="false" afterPath="$PROJECT_DIR$/NetworkManager.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2QMjTl9V1YQdsJ5JFZdBKLRCbCI" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/afa/PycharmProjects/lab3&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1b7bbc03-8d02-4551-a26d-77a3315d1527" name="Changes" comment="" />
      <created>1685170354230</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1685170354230</updated>
      <workItem from="1685170355481" duration="8829000" />
      <workItem from="1685205226903" duration="4888000" />
      <workItem from="1685534032112" duration="17153000" />
      <workItem from="1685568558194" duration="4158000" />
    </task>
    <task id="LOCAL-00001" summary="NetworkManager and Msg class added&#10;&#10;NetworkManager: Generic class to perform tcp send, tcp listen, udp listen, udp broadcast&#10;Msg: Introduces a short way of creating msg_dict items. Conversion functions are also implemented.&#10;&#10;Todo:&#10; - Test sender and listeners&#10; - Implement other message types">
      <created>1685178329814</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1685178329814</updated>
    </task>
    <task id="LOCAL-00002" summary="NetworkManager.py: All msg types are implemented in msg class&#10;self.peers is dictionary object">
      <created>1685214342323</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1685214342323</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="NetworkManager and Msg class added&#10;&#10;NetworkManager: Generic class to perform tcp send, tcp listen, udp listen, udp broadcast&#10;Msg: Introduces a short way of creating msg_dict items. Conversion functions are also implemented.&#10;&#10;Todo:&#10; - Test sender and listeners&#10; - Implement other message types" />
    <MESSAGE value="NetworkManager.py: All msg types are implemented in msg class&#10;self.peers is dictionary object" />
    <option name="LAST_COMMIT_MESSAGE" value="NetworkManager.py: All msg types are implemented in msg class&#10;self.peers is dictionary object" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/487_Final_Project$main.coverage" NAME="main Coverage Results" MODIFIED="1685572513274" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/487_Final_Project$Msg.coverage" NAME="Msg Coverage Results" MODIFIED="1685566377942" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/487_Final_Project$NetworkManager.coverage" NAME="NetworkManager Coverage Results" MODIFIED="1685572508655" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>